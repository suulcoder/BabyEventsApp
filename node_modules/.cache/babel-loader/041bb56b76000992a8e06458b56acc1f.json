{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/UVG/DISE\\xD1O WEB/BabyEventsApp/src/components/Baby/index.js\";\nimport './styles.css';\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport * as selectors from '../../reducers';\nimport { connect } from 'react-redux';\n\nconst Baby = ({\n  babies,\n  count\n}) => React.createElement(\"div\", {\n  className: \"container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"baby\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"select\", {\n  id: \"B\",\n  name: \"babies\",\n  options: options,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, options.map(baby => {\n  React.createElement(\"option\", {\n    value: baby[Object.keys(baby)[1]] + \" \" + baby[Object.keys(baby)[2]],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, baby[Object.keys(baby)[1]] + \" \" + baby[Object.keys(baby)[2]]);\n}))));\n\nexport default connect(state => ({\n  babies: selectors.getAllBabies(state)\n}), undefined)(Baby);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÃ‘O WEB/BabyEventsApp/src/components/Baby/index.js"],"names":["React","Field","reduxForm","selectors","connect","Baby","babies","count","options","map","baby","Object","keys","state","getAllBabies","undefined"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA;AAAR,CAAD,KACL;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAQ,EAAA,EAAE,EAAC,GAAX;AAAe,EAAA,IAAI,EAAC,QAApB;AAA6B,EAAA,OAAO,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,OAAO,CAACC,GAAR,CAAYC,IAAI,IAAI;AAClB;AAAQ,IAAA,KAAK,EAAEA,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,CAAlB,CAAD,CAAJ,GAA2B,GAA3B,GAA+BA,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,CAAlB,CAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2EA,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,CAAlB,CAAD,CAAJ,GAA2B,GAA3B,GAA+BA,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,CAAlB,CAAD,CAA9G;AACF,CAFA,CADL,CADA,CADJ,CADR;;AAYA,eAAeN,OAAO,CAClBS,KAAK,KAAK;AACNP,EAAAA,MAAM,EAAEH,SAAS,CAACW,YAAV,CAAuBD,KAAvB;AADF,CAAL,CADa,EAIlBE,SAJkB,CAAP,CAKbV,IALa,CAAf","sourcesContent":["import './styles.css';\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport * as selectors from '../../reducers'\nimport { connect } from 'react-redux';\n\nconst Baby = ({babies,count}) => (\n        <div className=\"container\">\n            <div className=\"baby\">\n            <select id=\"B\" name=\"babies\" options={options}>\n                {options.map(baby => {\n                   <option value={baby[Object.keys(baby)[1]]+\" \"+baby[Object.keys(baby)[2]]}>{baby[Object.keys(baby)[1]]+\" \"+baby[Object.keys(baby)[2]]}</option> \n                })}\n        </select>\n            </div>\n        </div>\n    )\n\nexport default connect(\n    state => ({\n        babies: selectors.getAllBabies(state)\n    }),\n    undefined\n)(Baby)"]},"metadata":{},"sourceType":"module"}