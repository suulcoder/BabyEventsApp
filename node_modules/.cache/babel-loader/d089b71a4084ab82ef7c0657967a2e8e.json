{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/UVG/DISE\\xD1O WEB/BabyEventsApp/src/components/AppState/index.js\";\nimport { connect } from 'react-redux';\nimport React, { Fragment } from 'react';\nimport './styles.css';\nimport * as selectors from '../../reducers';\nimport NewBaby from '../NewBaby';\nimport Baby from '../Baby';\nimport Events from '../Events';\nimport AddEvent from '../AddEvent';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\n\nclass AppState extends React.Component {\n  render() {\n    const {\n      location\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tittle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, 'BABY EVENTS')), React.createElement(\"div\", {\n      className: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, 'Made By: SuulCoder'))), React.createElement(\"div\", {\n      className: \"empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), location.pathname === '/addBaby' || location.pathname === '/' ? React.createElement(NewBaby, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : location.pathname.split('/')[1] === 'baby' && this.props.babiesIDs.includes(location.pathname.split('/')[2]) ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Baby, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(AddEvent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Events, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"404 PAGE NOT FOUND\"));\n  }\n\n}\n\nAppState.propTypes = {\n  match: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  babiesIDs: PropTypes.array.isRequired\n};\nexport default withRouter(connect(state => {\n  console.log(state);\n  return {\n    babiesIDs: selectors.getBabaiesIDs(state)\n  };\n})(AppState));","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÃ‘O WEB/BabyEventsApp/src/components/AppState/index.js"],"names":["connect","React","Fragment","selectors","NewBaby","Baby","Events","AddEvent","PropTypes","withRouter","AppState","Component","render","location","props","pathname","split","babiesIDs","includes","propTypes","match","object","isRequired","history","array","state","console","log","getBabaiesIDs"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsC;AAQlCC,EAAAA,MAAM,GAAE;AACJ,UAAK;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAAzB;AACA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,aADL,CADJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBADL,CADJ,CANJ,CADJ,EAaI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAcI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADJ,EAkBSD,QAAQ,CAACE,QAAT,KAAoB,UAApB,IAAkCF,QAAQ,CAACE,QAAT,KAAoB,GAAvD,GACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAGKF,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,MAAkC,MAAlC,IAA4C,KAAKF,KAAL,CAAWG,SAAX,CAAqBC,QAArB,CAA8BL,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAA9B,CAA7C,GACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADA,GASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA9BhB,CADJ;AAqCH;;AA/CiC;;AAAhCN,Q,CACKS,S,GAAY;AACfC,EAAAA,KAAK,EAAEZ,SAAS,CAACa,MAAV,CAAiBC,UADT;AAEfT,EAAAA,QAAQ,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UAFZ;AAGfC,EAAAA,OAAO,EAAEf,SAAS,CAACa,MAAV,CAAiBC,UAHX;AAIfL,EAAAA,SAAS,EAAET,SAAS,CAACgB,KAAV,CAAgBF;AAJZ,C;AAiDvB,eAAeb,UAAU,CAACT,OAAO,CAC7ByB,KAAK,IAAI;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAQ;AACRR,IAAAA,SAAS,EAAEd,SAAS,CAACyB,aAAV,CAAwBH,KAAxB;AADH,GAAR;AAED,CAL0B,CAAP,CAMxBf,QANwB,CAAD,CAAzB","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Fragment } from 'react'\nimport './styles.css'\nimport * as selectors from '../../reducers'\nimport NewBaby from '../NewBaby';\nimport Baby from '../Baby'\nimport Events from '../Events'\nimport AddEvent from '../AddEvent'\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\n\nclass AppState extends React.Component{\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n        babiesIDs: PropTypes.array.isRequired,\n    };\n\n    render(){\n        const{ location } = this.props;\n        return(\n            <Fragment>\n                <Fragment>\n                    <div className=\"header\">\n                        <div className=\"tittle\">\n                            <h1>\n                                {'BABY EVENTS'}\n                            </h1>\n                        </div>\n                        <div className=\"author\">\n                            <h2>\n                                {'Made By: SuulCoder'}\n                            </h2>\n                        </div>\n                    </div>\n                    <div className=\"empty\"></div>\n                    <div className=\"bar\"></div>\n                </Fragment>\n                {\n                    (location.pathname==='/addBaby' || location.pathname==='/')  ? (\n                        <NewBaby></NewBaby>\n                    ):(\n                        (location.pathname.split('/')[1]==='baby' && this.props.babiesIDs.includes(location.pathname.split('/')[2])) ? (\n                        <Fragment>\n                            <Baby></Baby>\n                            <div className=\"content\">\n                                <AddEvent></AddEvent>\n                                <Events></Events>\n                            </div>\n                        </Fragment>\n                        ) : (\n                            <h1>404 PAGE NOT FOUND</h1>\n                        )\n                    )\n                }\n            </Fragment>\n        )\n    }\n}\n\nexport default withRouter(connect(\n    state => {\n        console.log(state)\n        return ({\n        babiesIDs: selectors.getBabaiesIDs(state)\n    })},\n)(AppState))"]},"metadata":{},"sourceType":"module"}