{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/UVG/DISE\\xD1O WEB/BabyEventsApp/src/components/AddEvent/index.js\";\nimport { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport * as selectors from '../../reducers';\nimport * as action from '../../actions/events';\n\nconst AddEvent = ({\n  name,\n  onSubmit,\n  types\n}) => {\n  const [info, changeInfo] = useState('');\n  const [type, changeType] = useState('');\n  return React.createElement(\"div\", {\n    className: \"addEvent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"ADD AN EVENT FOR \", name), React.createElement(\"select\", {\n    onChange: e => changeType(e.target.value),\n    value: type,\n    className: \"select\",\n    id: \"B\",\n    name: \"events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, types.map(type => React.createElement(\"option\", {\n    key: type[0],\n    value: type[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, type[1]))), React.createElement(\"input\", {\n    className: \"myInput\",\n    type: \"text\",\n    placeholder: \"Write a description of the event\",\n    value: info,\n    onChange: e => changeInfo(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    onClick: () => onSubmit(type, info),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, '+'));\n};\n\nexport default connect(state => ({\n  name: selectors.getSelectedBaby(state)[Object.keys(selectors.getSelectedBaby(state))[0]],\n  types: [(0, 'poop'), (1, 'pee'), (2, 'food'), (3, 'sleep')]\n}), dispatch => ({\n  onSubmit(type, info) {\n    dispatch(actions.addEvent(type, new Date(), info));\n  }\n\n}))(AddEvent);","map":{"version":3,"sources":["/home/thecoder/Documentos/UVG/DISEÃ‘O WEB/BabyEventsApp/src/components/AddEvent/index.js"],"names":["connect","React","useState","selectors","action","AddEvent","name","onSubmit","types","info","changeInfo","type","changeType","e","target","value","map","state","getSelectedBaby","Object","keys","dispatch","actions","addEvent","Date"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,SAAZ,MAA2B,gBAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,QAAN;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AACxC,QAAM,CAACC,IAAD,EAAMC,UAAN,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAMC,UAAN,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBI,IAAtB,CADJ,EAEI;AAAQ,IAAA,QAAQ,EAAEO,CAAC,IAAED,UAAU,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/B;AAAiD,IAAA,KAAK,EAAEJ,IAAxD;AAA8D,IAAA,SAAS,EAAC,QAAxE;AAAiF,IAAA,EAAE,EAAC,GAApF;AAAwF,IAAA,IAAI,EAAC,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSH,KAAK,CAACQ,GAAN,CAAUL,IAAI,IACf;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAAC,CAAD,CAAjB;AAAsB,IAAA,KAAK,EAAEA,IAAI,CAAC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,IAAI,CAAC,CAAD,CAA3C,CADC,CADT,CAFJ,EAOI;AACI,IAAA,SAAS,EAAC,SADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,kCAHhB;AAII,IAAA,KAAK,EAAEF,IAJX;AAKI,IAAA,QAAQ,EAAEI,CAAC,IAAIH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAcI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAC5C,MAAMR,QAAQ,CAACI,IAAD,EAAMF,IAAN,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK,GAHL,CAdJ,CADJ;AAsBH,CAzBD;;AA2BA,eAAeT,OAAO,CAClBiB,KAAK,KAAG;AACJX,EAAAA,IAAI,EAAEH,SAAS,CAACe,eAAV,CAA0BD,KAA1B,EAAiCE,MAAM,CAACC,IAAP,CAAYjB,SAAS,CAACe,eAAV,CAA0BD,KAA1B,CAAZ,EAA8C,CAA9C,CAAjC,CADF;AAEJT,EAAAA,KAAK,EAAE,EAAE,GAAE,MAAJ,IAAa,GAAE,KAAf,IAAuB,GAAE,MAAzB,IAAkC,GAAE,OAApC;AAFH,CAAH,CADa,EAKlBa,QAAQ,KAAG;AACPd,EAAAA,QAAQ,CAACI,IAAD,EAAMF,IAAN,EAAW;AACfY,IAAAA,QAAQ,CAACC,OAAO,CAACC,QAAR,CAAiBZ,IAAjB,EAAsB,IAAIa,IAAJ,EAAtB,EAAiCf,IAAjC,CAAD,CAAR;AACH;;AAHM,CAAH,CALU,CAAP,CAUbJ,QAVa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport React, { useState } from 'react';\nimport * as selectors from '../../reducers'\nimport * as action from '../../actions/events'\n\nconst AddEvent = ({name,onSubmit,types}) => {\n    const [info,changeInfo] = useState('')\n    const [type,changeType] = useState('')\n    return(\n        <div className=\"addEvent\">\n            <h3>ADD AN EVENT FOR {name}</h3>\n            <select onChange={e=>changeType(e.target.value)} value={type} className=\"select\" id=\"B\" name=\"events\">\n                    {types.map(type => (\n                    <option key={type[0]} value={type[1]}>{type[1]}</option> \n                    ))}\n                </select>            \n            <input\n                className=\"myInput\"\n                type=\"text\"\n                placeholder=\"Write a description of the event\"\n                value={info}\n                onChange={e => changeInfo(e.target.value)}\n            />\n            <button className=\"button\" type=\"submit\" onClick={\n                () => onSubmit(type,info)\n            }>\n                {'+'}\n            </button>\n        </div>\n    )\n}\n\nexport default connect(\n    state=>({\n        name: selectors.getSelectedBaby(state)[Object.keys(selectors.getSelectedBaby(state))[0]],\n        types: [(0,'poop'),(1,'pee'),(2,'food'),(3,'sleep')]\n    }),\n    dispatch=>({\n        onSubmit(type,info){\n            dispatch(actions.addEvent(type,new Date(),info))\n        }\n    })\n)(AddEvent)\n"]},"metadata":{},"sourceType":"module"}